// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniSelector.DataAccess.Data;

#nullable disable

namespace UniSelector.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241127171313_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CivilIdPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("HighSchoolCertificatePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCivilIdVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHighSchoolCertificateVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPassportVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProfileComplete")
                        .HasColumnType("bit");

                    b.Property<int>("MajorId")
                        .HasColumnType("int");

                    b.Property<bool>("MeetsRequirements")
                        .HasColumnType("bit");

                    b.Property<string>("PassportPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniversityFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("MajorId");

                    b.HasIndex("UniversityId");

                    b.HasIndex("UserId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("UniSelector.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CivilID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CivilIDExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Grade")
                        .HasColumnType("real");

                    b.Property<bool>("HasAptitudeTest")
                        .HasColumnType("bit");

                    b.Property<bool>("HasFourYearExperience")
                        .HasColumnType("bit");

                    b.Property<int?>("HighSchoolGraduationYear")
                        .HasColumnType("int");

                    b.Property<string>("HighSchoolType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("IELTS")
                        .HasColumnType("real");

                    b.Property<bool>("IsPublicSchool")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersNationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("TOEFL")
                        .HasColumnType("real");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("UniSelector.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdmissionRequirements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandardFacultyId")
                        .HasColumnType("int");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StandardFacultyId");

                    b.HasIndex("UniversityId");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdmissionRequirements = "Minimum 65% high school grade, English proficiency required",
                            Description = "Leading business education in Kuwait with focus on modern business practices",
                            StandardFacultyId = 4,
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 2,
                            AdmissionRequirements = "Minimum 70% high school grade, Strong mathematics background",
                            Description = "Cutting-edge computing education with focus on practical skills",
                            StandardFacultyId = 14,
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 3,
                            AdmissionRequirements = "Minimum 60% high school grade, Interview required",
                            Description = "Comprehensive arts education with focus on cultural studies",
                            StandardFacultyId = 5,
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 4,
                            AdmissionRequirements = "Minimum 65% high school grade, Good communication skills",
                            Description = "Modern educational practices with focus on teaching methods",
                            StandardFacultyId = 6,
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 5,
                            AdmissionRequirements = "Minimum 75% high school grade, Strong science background",
                            Description = "Premier engineering programs with international standards",
                            StandardFacultyId = 1,
                            UniversityId = 3
                        },
                        new
                        {
                            Id = 6,
                            AdmissionRequirements = "Minimum 70% high school grade, English proficiency required",
                            Description = "American-standard business education with global perspective",
                            StandardFacultyId = 4,
                            UniversityId = 3
                        },
                        new
                        {
                            Id = 7,
                            AdmissionRequirements = "Minimum 70% high school grade, Strong scientific aptitude",
                            Description = "Advanced scientific research and education programs",
                            StandardFacultyId = 3,
                            UniversityId = 3
                        },
                        new
                        {
                            Id = 8,
                            AdmissionRequirements = "Minimum 65% high school grade, Portfolio submission",
                            Description = "Creative arts and modern media studies",
                            StandardFacultyId = 20,
                            UniversityId = 3
                        });
                });

            modelBuilder.Entity("UniSelector.Models.Major", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AveragePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AverageStartingSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<float>("EmploymentRate")
                        .HasColumnType("real");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<float>("MinimumGrade")
                        .HasColumnType("real");

                    b.Property<float?>("MinimumIELTS")
                        .HasColumnType("real");

                    b.Property<float?>("MinimumTOEFL")
                        .HasColumnType("real");

                    b.Property<bool>("RequiresAptitudeTest")
                        .HasColumnType("bit");

                    b.Property<int>("StandardMajorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("StandardMajorId");

                    b.ToTable("Majors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AveragePrice = 15000m,
                            AverageStartingSalary = 800m,
                            Credits = 130,
                            EmploymentRate = 85f,
                            FacultyId = 1,
                            MinimumGrade = 65f,
                            MinimumIELTS = 6f,
                            MinimumTOEFL = 80f,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 13
                        },
                        new
                        {
                            Id = 2,
                            AveragePrice = 14000m,
                            AverageStartingSalary = 750m,
                            Credits = 125,
                            EmploymentRate = 80f,
                            FacultyId = 1,
                            MinimumGrade = 65f,
                            MinimumIELTS = 6f,
                            MinimumTOEFL = 80f,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 14
                        },
                        new
                        {
                            Id = 3,
                            AveragePrice = 14500m,
                            AverageStartingSalary = 780m,
                            Credits = 128,
                            EmploymentRate = 82f,
                            FacultyId = 1,
                            MinimumGrade = 65f,
                            MinimumIELTS = 6f,
                            MinimumTOEFL = 80f,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 15
                        },
                        new
                        {
                            Id = 4,
                            AveragePrice = 16000m,
                            AverageStartingSalary = 900m,
                            Credits = 135,
                            EmploymentRate = 90f,
                            FacultyId = 2,
                            MinimumGrade = 70f,
                            MinimumIELTS = 6f,
                            MinimumTOEFL = 85f,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 53
                        },
                        new
                        {
                            Id = 5,
                            AveragePrice = 16500m,
                            AverageStartingSalary = 950m,
                            Credits = 140,
                            EmploymentRate = 92f,
                            FacultyId = 2,
                            MinimumGrade = 70f,
                            MinimumIELTS = 6f,
                            MinimumTOEFL = 85f,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 54
                        },
                        new
                        {
                            Id = 6,
                            AveragePrice = 15500m,
                            AverageStartingSalary = 850m,
                            Credits = 132,
                            EmploymentRate = 88f,
                            FacultyId = 2,
                            MinimumGrade = 70f,
                            MinimumIELTS = 6f,
                            MinimumTOEFL = 85f,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 55
                        },
                        new
                        {
                            Id = 7,
                            AveragePrice = 13000m,
                            AverageStartingSalary = 650m,
                            Credits = 120,
                            EmploymentRate = 75f,
                            FacultyId = 3,
                            MinimumGrade = 65f,
                            MinimumIELTS = 6.5f,
                            MinimumTOEFL = 90f,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 17
                        },
                        new
                        {
                            Id = 8,
                            AveragePrice = 12000m,
                            AverageStartingSalary = 600m,
                            Credits = 120,
                            EmploymentRate = 70f,
                            FacultyId = 3,
                            MinimumGrade = 60f,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 18
                        },
                        new
                        {
                            Id = 9,
                            AveragePrice = 12500m,
                            AverageStartingSalary = 550m,
                            Credits = 125,
                            EmploymentRate = 65f,
                            FacultyId = 3,
                            MinimumGrade = 60f,
                            MinimumIELTS = 5.5f,
                            MinimumTOEFL = 75f,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 19
                        },
                        new
                        {
                            Id = 10,
                            AveragePrice = 14000m,
                            AverageStartingSalary = 750m,
                            Credits = 130,
                            EmploymentRate = 85f,
                            FacultyId = 4,
                            MinimumGrade = 65f,
                            MinimumIELTS = 6f,
                            MinimumTOEFL = 80f,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 21
                        },
                        new
                        {
                            Id = 11,
                            AveragePrice = 14500m,
                            AverageStartingSalary = 800m,
                            Credits = 132,
                            EmploymentRate = 80f,
                            FacultyId = 4,
                            MinimumGrade = 65f,
                            MinimumIELTS = 6f,
                            MinimumTOEFL = 80f,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 22
                        },
                        new
                        {
                            Id = 12,
                            AveragePrice = 14200m,
                            AverageStartingSalary = 780m,
                            Credits = 128,
                            EmploymentRate = 82f,
                            FacultyId = 4,
                            MinimumGrade = 65f,
                            MinimumIELTS = 6.5f,
                            MinimumTOEFL = 85f,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 23
                        },
                        new
                        {
                            Id = 13,
                            AveragePrice = 25000m,
                            AverageStartingSalary = 1200m,
                            Credits = 150,
                            EmploymentRate = 92f,
                            FacultyId = 5,
                            MinimumGrade = 75f,
                            MinimumIELTS = 6.5f,
                            MinimumTOEFL = 88f,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 1
                        },
                        new
                        {
                            Id = 14,
                            AveragePrice = 25000m,
                            AverageStartingSalary = 1150m,
                            Credits = 150,
                            EmploymentRate = 90f,
                            FacultyId = 5,
                            MinimumGrade = 75f,
                            MinimumIELTS = 6.5f,
                            MinimumTOEFL = 88f,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 2
                        },
                        new
                        {
                            Id = 15,
                            AveragePrice = 25000m,
                            AverageStartingSalary = 1180m,
                            Credits = 150,
                            EmploymentRate = 91f,
                            FacultyId = 5,
                            MinimumGrade = 75f,
                            MinimumIELTS = 6.5f,
                            MinimumTOEFL = 88f,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 3
                        },
                        new
                        {
                            Id = 16,
                            AveragePrice = 22000m,
                            AverageStartingSalary = 950m,
                            Credits = 135,
                            EmploymentRate = 88f,
                            FacultyId = 6,
                            MinimumGrade = 70f,
                            MinimumIELTS = 6.5f,
                            MinimumTOEFL = 85f,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 13
                        },
                        new
                        {
                            Id = 17,
                            AveragePrice = 22000m,
                            AverageStartingSalary = 900m,
                            Credits = 132,
                            EmploymentRate = 85f,
                            FacultyId = 6,
                            MinimumGrade = 70f,
                            MinimumIELTS = 6.5f,
                            MinimumTOEFL = 85f,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 15
                        },
                        new
                        {
                            Id = 18,
                            AveragePrice = 22000m,
                            AverageStartingSalary = 1000m,
                            Credits = 135,
                            EmploymentRate = 87f,
                            FacultyId = 6,
                            MinimumGrade = 70f,
                            MinimumIELTS = 6.5f,
                            MinimumTOEFL = 85f,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 16
                        },
                        new
                        {
                            Id = 19,
                            AveragePrice = 20000m,
                            AverageStartingSalary = 850m,
                            Credits = 140,
                            EmploymentRate = 75f,
                            FacultyId = 7,
                            MinimumGrade = 70f,
                            MinimumIELTS = 6f,
                            MinimumTOEFL = 82f,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 9
                        },
                        new
                        {
                            Id = 20,
                            AveragePrice = 20000m,
                            AverageStartingSalary = 870m,
                            Credits = 140,
                            EmploymentRate = 78f,
                            FacultyId = 7,
                            MinimumGrade = 70f,
                            MinimumIELTS = 6f,
                            MinimumTOEFL = 82f,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 10
                        },
                        new
                        {
                            Id = 21,
                            AveragePrice = 20000m,
                            AverageStartingSalary = 860m,
                            Credits = 138,
                            EmploymentRate = 76f,
                            FacultyId = 7,
                            MinimumGrade = 70f,
                            MinimumIELTS = 6f,
                            MinimumTOEFL = 82f,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 11
                        },
                        new
                        {
                            Id = 22,
                            AveragePrice = 18000m,
                            AverageStartingSalary = 700m,
                            Credits = 125,
                            EmploymentRate = 75f,
                            FacultyId = 8,
                            MinimumGrade = 65f,
                            MinimumIELTS = 6f,
                            MinimumTOEFL = 80f,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 77
                        },
                        new
                        {
                            Id = 23,
                            AveragePrice = 19000m,
                            AverageStartingSalary = 750m,
                            Credits = 130,
                            EmploymentRate = 80f,
                            FacultyId = 8,
                            MinimumGrade = 65f,
                            MinimumIELTS = 6f,
                            MinimumTOEFL = 80f,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 79
                        },
                        new
                        {
                            Id = 24,
                            AveragePrice = 18500m,
                            AverageStartingSalary = 730m,
                            Credits = 128,
                            EmploymentRate = 78f,
                            FacultyId = 8,
                            MinimumGrade = 65f,
                            MinimumIELTS = 6f,
                            MinimumTOEFL = 80f,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 80
                        });
                });

            modelBuilder.Entity("UniSelector.Models.StandardFaculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameArabic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StandardFaculties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameArabic = "كلية الهندسة",
                            NameEnglish = "College of Engineering"
                        },
                        new
                        {
                            Id = 2,
                            NameArabic = "كلية الطب",
                            NameEnglish = "College of Medicine"
                        },
                        new
                        {
                            Id = 3,
                            NameArabic = "كلية العلوم",
                            NameEnglish = "College of Science"
                        },
                        new
                        {
                            Id = 4,
                            NameArabic = "كلية إدارة الأعمال",
                            NameEnglish = "College of Business Administration"
                        },
                        new
                        {
                            Id = 5,
                            NameArabic = "كلية الآداب",
                            NameEnglish = "College of Arts"
                        },
                        new
                        {
                            Id = 6,
                            NameArabic = "كلية التربية",
                            NameEnglish = "College of Education"
                        },
                        new
                        {
                            Id = 7,
                            NameArabic = "كلية الشريعة والدراسات الإسلامية",
                            NameEnglish = "College of Sharia and Islamic Studies"
                        },
                        new
                        {
                            Id = 8,
                            NameArabic = "كلية الحقوق",
                            NameEnglish = "College of Law"
                        },
                        new
                        {
                            Id = 9,
                            NameArabic = "كلية العلوم الاجتماعية",
                            NameEnglish = "College of Social Sciences"
                        },
                        new
                        {
                            Id = 10,
                            NameArabic = "كلية طب الأسنان",
                            NameEnglish = "College of Dentistry"
                        },
                        new
                        {
                            Id = 11,
                            NameArabic = "كلية الصيدلة",
                            NameEnglish = "College of Pharmacy"
                        },
                        new
                        {
                            Id = 12,
                            NameArabic = "كلية العلوم الطبية المساعدة",
                            NameEnglish = "College of Allied Health Sciences"
                        },
                        new
                        {
                            Id = 13,
                            NameArabic = "كلية العمارة",
                            NameEnglish = "College of Architecture"
                        },
                        new
                        {
                            Id = 14,
                            NameArabic = "كلية علوم وهندسة الحاسوب",
                            NameEnglish = "College of Computing Sciences and Engineering"
                        },
                        new
                        {
                            Id = 15,
                            NameArabic = "كلية الصحة العامة",
                            NameEnglish = "College of Public Health"
                        },
                        new
                        {
                            Id = 16,
                            NameArabic = "كلية العلوم الحياتية",
                            NameEnglish = "College of Life Sciences"
                        },
                        new
                        {
                            Id = 17,
                            NameArabic = "كلية الدراسات العليا",
                            NameEnglish = "College of Graduate Studies"
                        },
                        new
                        {
                            Id = 18,
                            NameArabic = "كلية التمريض",
                            NameEnglish = "College of Nursing"
                        },
                        new
                        {
                            Id = 19,
                            NameArabic = "كلية الدراسات الإسلامية",
                            NameEnglish = "College of Islamic Studies"
                        },
                        new
                        {
                            Id = 20,
                            NameArabic = "كلية الفنون والإعلام",
                            NameEnglish = "College of Arts and Media"
                        });
                });

            modelBuilder.Entity("UniSelector.Models.StandardMajor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighSchoolPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameArabic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandardFacultyId")
                        .HasColumnType("int");

                    b.Property<int>("StudyDuration")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StandardFacultyId");

                    b.ToTable("StandardMajors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Focuses on electrical systems, power generation, and electronics",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الهندسة الكهربائية",
                            NameEnglish = "Electrical Engineering",
                            StandardFacultyId = 1,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 2,
                            Description = "Deals with design and construction of infrastructure",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الهندسة المدنية",
                            NameEnglish = "Civil Engineering",
                            StandardFacultyId = 1,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 3,
                            Description = "Studies mechanics, robotics, and thermal systems",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الهندسة الميكانيكية",
                            NameEnglish = "Mechanical Engineering",
                            StandardFacultyId = 1,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 4,
                            Description = "Focuses on chemical processes and materials",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الهندسة الكيميائية",
                            NameEnglish = "Chemical Engineering",
                            StandardFacultyId = 1,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "Complete medical education program",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الطب العام",
                            NameEnglish = "General Medicine",
                            StandardFacultyId = 2,
                            StudyDuration = 7
                        },
                        new
                        {
                            Id = 6,
                            Description = "Specializes in child healthcare",
                            HighSchoolPath = "Scientific",
                            NameArabic = "طب الأطفال",
                            NameEnglish = "Pediatrics",
                            StandardFacultyId = 2,
                            StudyDuration = 7
                        },
                        new
                        {
                            Id = 7,
                            Description = "Focus on surgical procedures and care",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الجراحة",
                            NameEnglish = "Surgery",
                            StandardFacultyId = 2,
                            StudyDuration = 7
                        },
                        new
                        {
                            Id = 8,
                            Description = "Emergency medical care and treatment",
                            HighSchoolPath = "Scientific",
                            NameArabic = "طب الطوارئ",
                            NameEnglish = "Emergency Medicine",
                            StandardFacultyId = 2,
                            StudyDuration = 7
                        },
                        new
                        {
                            Id = 9,
                            Description = "Study of matter and energy",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الفيزياء",
                            NameEnglish = "Physics",
                            StandardFacultyId = 3,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 10,
                            Description = "Study of chemical compounds and reactions",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الكيمياء",
                            NameEnglish = "Chemistry",
                            StandardFacultyId = 3,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 11,
                            Description = "Study of living organisms",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الأحياء",
                            NameEnglish = "Biology",
                            StandardFacultyId = 3,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 12,
                            Description = "Advanced mathematical studies",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الرياضيات",
                            NameEnglish = "Mathematics",
                            StandardFacultyId = 3,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 13,
                            Description = "Financial accounting and auditing",
                            HighSchoolPath = "Both",
                            NameArabic = "المحاسبة",
                            NameEnglish = "Accounting",
                            StandardFacultyId = 4,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 14,
                            Description = "Marketing strategies and consumer behavior",
                            HighSchoolPath = "Both",
                            NameArabic = "التسويق",
                            NameEnglish = "Marketing",
                            StandardFacultyId = 4,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 15,
                            Description = "Business operations and strategy",
                            HighSchoolPath = "Both",
                            NameArabic = "إدارة الأعمال",
                            NameEnglish = "Business Management",
                            StandardFacultyId = 4,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 16,
                            Description = "Financial management and investment",
                            HighSchoolPath = "Both",
                            NameArabic = "التمويل",
                            NameEnglish = "Finance",
                            StandardFacultyId = 4,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 17,
                            Description = "English linguistics and literature",
                            HighSchoolPath = "Both",
                            NameArabic = "اللغة الإنجليزية",
                            NameEnglish = "English Language",
                            StandardFacultyId = 5,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 18,
                            Description = "Arabic linguistics and literature",
                            HighSchoolPath = "Both",
                            NameArabic = "اللغة العربية",
                            NameEnglish = "Arabic Language",
                            StandardFacultyId = 5,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 19,
                            Description = "Historical studies and research",
                            HighSchoolPath = "Literary",
                            NameArabic = "التاريخ",
                            NameEnglish = "History",
                            StandardFacultyId = 5,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 20,
                            Description = "Philosophical studies and ethics",
                            HighSchoolPath = "Literary",
                            NameArabic = "الفلسفة",
                            NameEnglish = "Philosophy",
                            StandardFacultyId = 5,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 21,
                            Description = "Primary school teaching",
                            HighSchoolPath = "Both",
                            NameArabic = "التربية الابتدائية",
                            NameEnglish = "Elementary Education",
                            StandardFacultyId = 6,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 22,
                            Description = "Special needs education",
                            HighSchoolPath = "Both",
                            NameArabic = "التربية الخاصة",
                            NameEnglish = "Special Education",
                            StandardFacultyId = 6,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 23,
                            Description = "English language teaching",
                            HighSchoolPath = "Both",
                            NameArabic = "تعليم اللغة الإنجليزية",
                            NameEnglish = "English Education",
                            StandardFacultyId = 6,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 24,
                            Description = "Mathematics teaching",
                            HighSchoolPath = "Scientific",
                            NameArabic = "تعليم الرياضيات",
                            NameEnglish = "Mathematics Education",
                            StandardFacultyId = 6,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 25,
                            Description = "Islamic law and jurisprudence",
                            HighSchoolPath = "Both",
                            NameArabic = "الفقه الإسلامي",
                            NameEnglish = "Islamic Jurisprudence",
                            StandardFacultyId = 7,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 26,
                            Description = "Islamic theology and doctrine",
                            HighSchoolPath = "Both",
                            NameArabic = "أصول الدين",
                            NameEnglish = "Islamic Theology",
                            StandardFacultyId = 7,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 27,
                            Description = "Quran interpretation and sciences",
                            HighSchoolPath = "Both",
                            NameArabic = "الدراسات القرآنية",
                            NameEnglish = "Quranic Studies",
                            StandardFacultyId = 7,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 28,
                            Description = "Study of prophetic traditions",
                            HighSchoolPath = "Both",
                            NameArabic = "الحديث وعلومه",
                            NameEnglish = "Hadith Studies",
                            StandardFacultyId = 7,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 29,
                            Description = "Constitutional and administrative law",
                            HighSchoolPath = "Both",
                            NameArabic = "القانون العام",
                            NameEnglish = "Public Law",
                            StandardFacultyId = 8,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 30,
                            Description = "Civil and commercial law",
                            HighSchoolPath = "Both",
                            NameArabic = "القانون الخاص",
                            NameEnglish = "Private Law",
                            StandardFacultyId = 8,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 31,
                            Description = "Criminal law and procedure",
                            HighSchoolPath = "Both",
                            NameArabic = "القانون الجنائي",
                            NameEnglish = "Criminal Law",
                            StandardFacultyId = 8,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 32,
                            Description = "International legal systems",
                            HighSchoolPath = "Both",
                            NameArabic = "القانون الدولي",
                            NameEnglish = "International Law",
                            StandardFacultyId = 8,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 33,
                            Description = "Human behavior and mental processes",
                            HighSchoolPath = "Both",
                            NameArabic = "علم النفس",
                            NameEnglish = "Psychology",
                            StandardFacultyId = 9,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 34,
                            Description = "Study of human society",
                            HighSchoolPath = "Both",
                            NameArabic = "علم الاجتماع",
                            NameEnglish = "Sociology",
                            StandardFacultyId = 9,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 35,
                            Description = "Community service and welfare",
                            HighSchoolPath = "Both",
                            NameArabic = "الخدمة الاجتماعية",
                            NameEnglish = "Social Work",
                            StandardFacultyId = 9,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 36,
                            Description = "Political systems and relations",
                            HighSchoolPath = "Both",
                            NameArabic = "العلوم السياسية",
                            NameEnglish = "Political Science",
                            StandardFacultyId = 9,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 37,
                            Description = "Comprehensive dental care",
                            HighSchoolPath = "Scientific",
                            NameArabic = "طب الأسنان العام",
                            NameEnglish = "General Dentistry",
                            StandardFacultyId = 10,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 38,
                            Description = "Dental surgical procedures",
                            HighSchoolPath = "Scientific",
                            NameArabic = "جراحة الفم والأسنان",
                            NameEnglish = "Oral Surgery",
                            StandardFacultyId = 10,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 39,
                            Description = "Dental alignment and correction",
                            HighSchoolPath = "Scientific",
                            NameArabic = "تقويم الأسنان",
                            NameEnglish = "Orthodontics",
                            StandardFacultyId = 10,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 40,
                            Description = "Children's dental care",
                            HighSchoolPath = "Scientific",
                            NameArabic = "طب أسنان الأطفال",
                            NameEnglish = "Pediatric Dentistry",
                            StandardFacultyId = 10,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 41,
                            Description = "Pharmaceutical sciences",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الصيدلة العامة",
                            NameEnglish = "General Pharmacy",
                            StandardFacultyId = 11,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 42,
                            Description = "Clinical pharmaceutical care",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الصيدلة السريرية",
                            NameEnglish = "Clinical Pharmacy",
                            StandardFacultyId = 11,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 43,
                            Description = "Pharmaceutical manufacturing",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الصيدلة الصناعية",
                            NameEnglish = "Industrial Pharmacy",
                            StandardFacultyId = 11,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 44,
                            Description = "Biological pharmaceutical studies",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الصيدلة الحيوية",
                            NameEnglish = "Biopharmacy",
                            StandardFacultyId = 11,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 45,
                            Description = "Physical rehabilitation",
                            HighSchoolPath = "Scientific",
                            NameArabic = "العلاج الطبيعي",
                            NameEnglish = "Physical Therapy",
                            StandardFacultyId = 12,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 46,
                            Description = "Medical testing and analysis",
                            HighSchoolPath = "Scientific",
                            NameArabic = "المختبرات الطبية",
                            NameEnglish = "Medical Laboratory",
                            StandardFacultyId = 12,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 47,
                            Description = "Medical imaging",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الأشعة التشخيصية",
                            NameEnglish = "Diagnostic Radiology",
                            StandardFacultyId = 12,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 48,
                            Description = "Nutritional therapy",
                            HighSchoolPath = "Scientific",
                            NameArabic = "التغذية العلاجية",
                            NameEnglish = "Clinical Nutrition",
                            StandardFacultyId = 12,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 49,
                            Description = "Building design and planning",
                            HighSchoolPath = "Scientific",
                            NameArabic = "العمارة",
                            NameEnglish = "Architecture",
                            StandardFacultyId = 13,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 50,
                            Description = "Interior space design",
                            HighSchoolPath = "Scientific",
                            NameArabic = "التصميم الداخلي",
                            NameEnglish = "Interior Design",
                            StandardFacultyId = 13,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 51,
                            Description = "City planning and development",
                            HighSchoolPath = "Scientific",
                            NameArabic = "تخطيط المدن",
                            NameEnglish = "Urban Planning",
                            StandardFacultyId = 13,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 52,
                            Description = "Environmental design",
                            HighSchoolPath = "Scientific",
                            NameArabic = "تصميم المناظر الطبيعية",
                            NameEnglish = "Landscape Architecture",
                            StandardFacultyId = 13,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 53,
                            Description = "Programming and computer theory",
                            HighSchoolPath = "Scientific",
                            NameArabic = "علوم الحاسوب",
                            NameEnglish = "Computer Science",
                            StandardFacultyId = 14,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 54,
                            Description = "Software development and systems",
                            HighSchoolPath = "Scientific",
                            NameArabic = "هندسة البرمجيات",
                            NameEnglish = "Software Engineering",
                            StandardFacultyId = 14,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 55,
                            Description = "Business information technology",
                            HighSchoolPath = "Scientific",
                            NameArabic = "نظم المعلومات",
                            NameEnglish = "Information Systems",
                            StandardFacultyId = 14,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 56,
                            Description = "Cybersecurity and data protection",
                            HighSchoolPath = "Scientific",
                            NameArabic = "أمن المعلومات",
                            NameEnglish = "Information Security",
                            StandardFacultyId = 14,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 57,
                            Description = "Community health programs",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الصحة العامة",
                            NameEnglish = "Public Health",
                            StandardFacultyId = 15,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 58,
                            Description = "Environmental health factors",
                            HighSchoolPath = "Scientific",
                            NameArabic = "صحة البيئة",
                            NameEnglish = "Environmental Health",
                            StandardFacultyId = 15,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 59,
                            Description = "Disease patterns and control",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الوبائيات",
                            NameEnglish = "Epidemiology",
                            StandardFacultyId = 15,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 60,
                            Description = "Health education and awareness",
                            HighSchoolPath = "Scientific",
                            NameArabic = "تعزيز الصحة",
                            NameEnglish = "Health Promotion",
                            StandardFacultyId = 15,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 61,
                            Description = "Biological technology applications",
                            HighSchoolPath = "Scientific",
                            NameArabic = "التقنية الحيوية",
                            NameEnglish = "Biotechnology",
                            StandardFacultyId = 16,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 62,
                            Description = "Study of microorganisms",
                            HighSchoolPath = "Scientific",
                            NameArabic = "علم الأحياء الدقيقة",
                            NameEnglish = "Microbiology",
                            StandardFacultyId = 16,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 63,
                            Description = "Genetic studies and research",
                            HighSchoolPath = "Scientific",
                            NameArabic = "علم الوراثة",
                            NameEnglish = "Genetics",
                            StandardFacultyId = 16,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 64,
                            Description = "Environmental studies",
                            HighSchoolPath = "Scientific",
                            NameArabic = "العلوم البيئية",
                            NameEnglish = "Environmental Science",
                            StandardFacultyId = 16,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 65,
                            Description = "Advanced business administration",
                            HighSchoolPath = "Both",
                            NameArabic = "إدارة الأعمال التنفيذية",
                            NameEnglish = "Executive MBA",
                            StandardFacultyId = 17,
                            StudyDuration = 2
                        },
                        new
                        {
                            Id = 66,
                            Description = "Educational management",
                            HighSchoolPath = "Both",
                            NameArabic = "القيادة التربوية",
                            NameEnglish = "Educational Leadership",
                            StandardFacultyId = 17,
                            StudyDuration = 2
                        },
                        new
                        {
                            Id = 67,
                            Description = "Advanced engineering studies",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الهندسة المتقدمة",
                            NameEnglish = "Advanced Engineering",
                            StandardFacultyId = 17,
                            StudyDuration = 2
                        },
                        new
                        {
                            Id = 68,
                            Description = "Advanced scientific research",
                            HighSchoolPath = "Scientific",
                            NameArabic = "العلوم التطبيقية",
                            NameEnglish = "Applied Sciences",
                            StandardFacultyId = 17,
                            StudyDuration = 2
                        },
                        new
                        {
                            Id = 69,
                            Description = "General nursing care",
                            HighSchoolPath = "Scientific",
                            NameArabic = "التمريض العام",
                            NameEnglish = "General Nursing",
                            StandardFacultyId = 18,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 70,
                            Description = "Emergency care nursing",
                            HighSchoolPath = "Scientific",
                            NameArabic = "تمريض الطوارئ",
                            NameEnglish = "Emergency Nursing",
                            StandardFacultyId = 18,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 71,
                            Description = "Children's healthcare",
                            HighSchoolPath = "Scientific",
                            NameArabic = "تمريض الأطفال",
                            NameEnglish = "Pediatric Nursing",
                            StandardFacultyId = 18,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 72,
                            Description = "Surgical care nursing",
                            HighSchoolPath = "Scientific",
                            NameArabic = "تمريض الباطني والجراحة",
                            NameEnglish = "Medical-Surgical Nursing",
                            StandardFacultyId = 18,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 73,
                            Description = "Comprehensive Islamic studies",
                            HighSchoolPath = "Both",
                            NameArabic = "الدراسات الإسلامية",
                            NameEnglish = "Islamic Studies",
                            StandardFacultyId = 19,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 74,
                            Description = "Islamic economic principles",
                            HighSchoolPath = "Both",
                            NameArabic = "الاقتصاد الإسلامي",
                            NameEnglish = "Islamic Economics",
                            StandardFacultyId = 19,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 75,
                            Description = "Islamic cultural studies",
                            HighSchoolPath = "Both",
                            NameArabic = "الدعوة والثقافة الإسلامية",
                            NameEnglish = "Islamic Culture",
                            StandardFacultyId = 19,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 76,
                            Description = "History of Islam",
                            HighSchoolPath = "Both",
                            NameArabic = "التاريخ الإسلامي",
                            NameEnglish = "Islamic History",
                            StandardFacultyId = 19,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 77,
                            Description = "Mass communication",
                            HighSchoolPath = "Both",
                            NameArabic = "الإعلام",
                            NameEnglish = "Media Studies",
                            StandardFacultyId = 20,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 78,
                            Description = "Visual artistic expression",
                            HighSchoolPath = "Both",
                            NameArabic = "الفنون البصرية",
                            NameEnglish = "Visual Arts",
                            StandardFacultyId = 20,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 79,
                            Description = "Visual communication design",
                            HighSchoolPath = "Both",
                            NameArabic = "التصميم الجرافيكي",
                            NameEnglish = "Graphic Design",
                            StandardFacultyId = 20,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 80,
                            Description = "Media content creation",
                            HighSchoolPath = "Both",
                            NameArabic = "الإنتاج الإعلامي",
                            NameEnglish = "Media Production",
                            StandardFacultyId = 20,
                            StudyDuration = 4
                        });
                });

            modelBuilder.Entity("UniSelector.Models.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KuwaitRank")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmallDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Universities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullDescription = "A leading open education institution in the Arab world.",
                            ImageUrl = "/images/University/AOU.png",
                            KuwaitRank = 1,
                            Name = "Arab Open University (AOU)",
                            PhoneNumber = "99999999",
                            SmallDescription = "",
                            location = "العارضية-Ardya",
                            type = "Private"
                        },
                        new
                        {
                            Id = 2,
                            FullDescription = "Offering American-style education with a Middle Eastern perspective.",
                            ImageUrl = "/images/University/AUM.png",
                            KuwaitRank = 2,
                            Name = "American University In Middle East (AUM)",
                            PhoneNumber = "99999999",
                            SmallDescription = "",
                            location = "العقيلة-Egila",
                            type = "Private"
                        },
                        new
                        {
                            Id = 3,
                            FullDescription = "Providing a comprehensive American liberal arts education.",
                            ImageUrl = "/images/University/AUK.png",
                            KuwaitRank = 3,
                            Name = "American University Of Kuwait (AUK)",
                            PhoneNumber = "99999999",
                            SmallDescription = "",
                            location = "السالمية-Salmya",
                            type = "Private"
                        },
                        new
                        {
                            Id = 4,
                            FullDescription = "The premier public institution of higher education in Kuwait.",
                            ImageUrl = "/images/university/KU.png",
                            KuwaitRank = 4,
                            Name = "Kuwait University (KU)",
                            PhoneNumber = "99999999",
                            SmallDescription = "",
                            location = "الشويخ-Shwaikh",
                            type = "Public"
                        });
                });

            modelBuilder.Entity("Application", b =>
                {
                    b.HasOne("UniSelector.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniSelector.Models.Major", "Major")
                        .WithMany()
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UniSelector.Models.University", "University")
                        .WithMany()
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UniSelector.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");

                    b.Navigation("Major");

                    b.Navigation("University");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("UniSelector.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("UniSelector.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniSelector.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("UniSelector.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniSelector.Models.Faculty", b =>
                {
                    b.HasOne("UniSelector.Models.StandardFaculty", "StandardFaculty")
                        .WithMany()
                        .HasForeignKey("StandardFacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniSelector.Models.University", "University")
                        .WithMany("Faculties")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StandardFaculty");

                    b.Navigation("University");
                });

            modelBuilder.Entity("UniSelector.Models.Major", b =>
                {
                    b.HasOne("UniSelector.Models.Faculty", "Faculty")
                        .WithMany("Majors")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniSelector.Models.StandardMajor", "StandardMajor")
                        .WithMany()
                        .HasForeignKey("StandardMajorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Faculty");

                    b.Navigation("StandardMajor");
                });

            modelBuilder.Entity("UniSelector.Models.StandardMajor", b =>
                {
                    b.HasOne("UniSelector.Models.StandardFaculty", "StandardFaculty")
                        .WithMany("StandardMajors")
                        .HasForeignKey("StandardFacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StandardFaculty");
                });

            modelBuilder.Entity("UniSelector.Models.Faculty", b =>
                {
                    b.Navigation("Majors");
                });

            modelBuilder.Entity("UniSelector.Models.StandardFaculty", b =>
                {
                    b.Navigation("StandardMajors");
                });

            modelBuilder.Entity("UniSelector.Models.University", b =>
                {
                    b.Navigation("Faculties");
                });
#pragma warning restore 612, 618
        }
    }
}
