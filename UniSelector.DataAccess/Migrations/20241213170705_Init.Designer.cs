// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniSelector.DataAccess.Data;

#nullable disable

namespace UniSelector.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241213170705_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CivilIdPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("HighSchoolCertificatePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCivilIdVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHighSchoolCertificateVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPassportVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProfileComplete")
                        .HasColumnType("bit");

                    b.Property<int>("MajorId")
                        .HasColumnType("int");

                    b.Property<string>("PassportPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniversityFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("MajorId");

                    b.HasIndex("UniversityId");

                    b.HasIndex("UserId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("UniSelector.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CivilID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CivilIDExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Grade")
                        .HasColumnType("real");

                    b.Property<bool>("HasAptitudeTest")
                        .HasColumnType("bit");

                    b.Property<bool>("HasFourYearExperience")
                        .HasColumnType("bit");

                    b.Property<int?>("HighSchoolGraduationYear")
                        .HasColumnType("int");

                    b.Property<string>("HighSchoolType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("IELTS")
                        .HasColumnType("real");

                    b.Property<bool>("IsPublicSchool")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersNationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("TOEFL")
                        .HasColumnType("real");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("UniSelector.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdmissionRequirements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandardFacultyId")
                        .HasColumnType("int");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StandardFacultyId");

                    b.HasIndex("UniversityId");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdmissionRequirements = "Minimum 70% high school GPA, TOEFL 80+ or IELTS 6.5+",
                            Description = "Comprehensive liberal arts education with diverse programs in humanities and sciences",
                            StandardFacultyId = 5,
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 2,
                            AdmissionRequirements = "Minimum 70% high school GPA, TOEFL 80+ or IELTS 6.5+",
                            Description = "AACSB-accredited business programs with focus on global business practices",
                            StandardFacultyId = 4,
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 3,
                            AdmissionRequirements = "Minimum 75% high school GPA in Scientific track, Strong math/science background",
                            Description = "ABET-accredited engineering programs with state-of-the-art facilities",
                            StandardFacultyId = 1,
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 4,
                            AdmissionRequirements = "Minimum 70% high school GPA, Portfolio submission required",
                            Description = "Creative design education with focus on practical applications",
                            StandardFacultyId = 13,
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 5,
                            AdmissionRequirements = "Minimum 75% in Scientific track, Strong mathematics background",
                            Description = "Comprehensive engineering programs with modern laboratories",
                            StandardFacultyId = 14,
                            UniversityId = 2
                        },
                        new
                        {
                            Id = 6,
                            AdmissionRequirements = "Minimum 70% high school GPA, English proficiency required",
                            Description = "Industry-focused business education with international accreditation",
                            StandardFacultyId = 4,
                            UniversityId = 2
                        },
                        new
                        {
                            Id = 7,
                            AdmissionRequirements = "Minimum 70% GPA, TOEFL 79+ or IELTS 6.5+",
                            Description = "Comprehensive programs in humanities, media, and computer science",
                            StandardFacultyId = 5,
                            UniversityId = 3
                        },
                        new
                        {
                            Id = 8,
                            AdmissionRequirements = "Minimum 70% GPA, English proficiency required",
                            Description = "AACSB-accredited business school with focus on practical skills",
                            StandardFacultyId = 4,
                            UniversityId = 3
                        },
                        new
                        {
                            Id = 9,
                            AdmissionRequirements = "Minimum 75% in Scientific stream, Strong math background",
                            Description = "Advanced technical education in engineering and computing",
                            StandardFacultyId = 14,
                            UniversityId = 5
                        },
                        new
                        {
                            Id = 10,
                            AdmissionRequirements = "Minimum 60% GPA, Basic English proficiency",
                            Description = "Flexible business education with UK partnership",
                            StandardFacultyId = 4,
                            UniversityId = 4
                        },
                        new
                        {
                            Id = 11,
                            AdmissionRequirements = "Minimum 65% GPA, Basic programming knowledge preferred",
                            Description = "IT and computing programs with international recognition",
                            StandardFacultyId = 14,
                            UniversityId = 4
                        },
                        new
                        {
                            Id = 20,
                            AdmissionRequirements = "Minimum 60% GPA, Higher English proficiency required",
                            Description = "English language and literature studies with focus on linguistics and translation",
                            StandardFacultyId = 5,
                            UniversityId = 4
                        },
                        new
                        {
                            Id = 12,
                            AdmissionRequirements = "Minimum 75% in Scientific track, Mathematics proficiency",
                            Description = "Australian-standard engineering education",
                            StandardFacultyId = 1,
                            UniversityId = 6
                        },
                        new
                        {
                            Id = 13,
                            AdmissionRequirements = "Minimum 70% GPA, English proficiency required",
                            Description = "Business programs with Australian curriculum",
                            StandardFacultyId = 4,
                            UniversityId = 6
                        },
                        new
                        {
                            Id = 14,
                            AdmissionRequirements = "Minimum 65% GPA, English proficiency test",
                            Description = "Women's business education with Australian standards",
                            StandardFacultyId = 4,
                            UniversityId = 7
                        },
                        new
                        {
                            Id = 15,
                            AdmissionRequirements = "Portfolio submission, Interview required",
                            Description = "Creative arts and design programs for women",
                            StandardFacultyId = 20,
                            UniversityId = 7
                        },
                        new
                        {
                            Id = 16,
                            AdmissionRequirements = "Minimum 75% GPA, Arabic and English proficiency",
                            Description = "Comprehensive legal education with focus on Kuwait and international law",
                            StandardFacultyId = 8,
                            UniversityId = 8
                        },
                        new
                        {
                            Id = 17,
                            AdmissionRequirements = "Minimum 75% in Scientific track, English proficiency required",
                            Description = "Specialized aviation engineering and maintenance programs",
                            StandardFacultyId = 1,
                            UniversityId = 9
                        },
                        new
                        {
                            Id = 18,
                            AdmissionRequirements = "Minimum 65% GPA, Basic technical aptitude",
                            Description = "Technical IT and networking education",
                            StandardFacultyId = 14,
                            UniversityId = 10
                        },
                        new
                        {
                            Id = 19,
                            AdmissionRequirements = "Minimum 65% GPA, English proficiency test",
                            Description = "Applied business and management programs",
                            StandardFacultyId = 4,
                            UniversityId = 10
                        },
                        new
                        {
                            Id = 21,
                            AdmissionRequirements = "Minimum 80% in Scientific track, Aptitude test required",
                            Description = "Leading engineering programs with ABET accreditation",
                            StandardFacultyId = 1,
                            UniversityId = 11
                        },
                        new
                        {
                            Id = 22,
                            AdmissionRequirements = "Minimum 75% in Scientific track, Aptitude test required",
                            Description = "Research-focused science programs across multiple disciplines",
                            StandardFacultyId = 3,
                            UniversityId = 11
                        },
                        new
                        {
                            Id = 23,
                            AdmissionRequirements = "Minimum 90% in Scientific track, Aptitude test required",
                            Description = "Premier medical education in Kuwait",
                            StandardFacultyId = 2,
                            UniversityId = 11
                        },
                        new
                        {
                            Id = 24,
                            AdmissionRequirements = "Minimum 75% in Scientific track, Aptitude test required",
                            Description = "Healthcare professional programs with clinical training",
                            StandardFacultyId = 12,
                            UniversityId = 11
                        },
                        new
                        {
                            Id = 25,
                            AdmissionRequirements = "Minimum 85% in Scientific track, Aptitude test required",
                            Description = "PharmD program with extensive clinical training",
                            StandardFacultyId = 11,
                            UniversityId = 11
                        },
                        new
                        {
                            Id = 26,
                            AdmissionRequirements = "Minimum 85% in Scientific track, Aptitude test required",
                            Description = "Advanced dental education with modern facilities",
                            StandardFacultyId = 10,
                            UniversityId = 11
                        },
                        new
                        {
                            Id = 27,
                            AdmissionRequirements = "Minimum 75% in Either track, Aptitude test required",
                            Description = "AACSB-accredited business programs",
                            StandardFacultyId = 4,
                            UniversityId = 11
                        },
                        new
                        {
                            Id = 28,
                            AdmissionRequirements = "Minimum 70% in Either track, Aptitude test required",
                            Description = "Comprehensive humanities and social sciences programs",
                            StandardFacultyId = 5,
                            UniversityId = 11
                        },
                        new
                        {
                            Id = 29,
                            AdmissionRequirements = "Minimum 80% in Either track, Aptitude test required",
                            Description = "Kuwait's premier legal education program",
                            StandardFacultyId = 8,
                            UniversityId = 11
                        },
                        new
                        {
                            Id = 30,
                            AdmissionRequirements = "Minimum 70% in Either track, Aptitude test required",
                            Description = "Teacher preparation and educational research programs",
                            StandardFacultyId = 6,
                            UniversityId = 11
                        },
                        new
                        {
                            Id = 31,
                            AdmissionRequirements = "Minimum 70% in Either track, Aptitude test required",
                            Description = "Islamic studies and jurisprudence programs",
                            StandardFacultyId = 7,
                            UniversityId = 11
                        });
                });

            modelBuilder.Entity("UniSelector.Models.Major", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AveragePrice")
                        .HasColumnType("float");

                    b.Property<double>("AverageStartingSalary")
                        .HasColumnType("float");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<double>("MinimumGrade")
                        .HasColumnType("float");

                    b.Property<double?>("MinimumIELTS")
                        .HasColumnType("float");

                    b.Property<double?>("MinimumTOEFL")
                        .HasColumnType("float");

                    b.Property<bool>("RequiresAptitudeTest")
                        .HasColumnType("bit");

                    b.Property<int>("StandardMajorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("StandardMajorId");

                    b.ToTable("Majors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AveragePrice = 16000.0,
                            AverageStartingSalary = 800.0,
                            Credits = 124,
                            FacultyId = 1,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.5,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 17
                        },
                        new
                        {
                            Id = 2,
                            AveragePrice = 16000.0,
                            AverageStartingSalary = 850.0,
                            Credits = 124,
                            FacultyId = 1,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.5,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 77
                        },
                        new
                        {
                            Id = 3,
                            AveragePrice = 17000.0,
                            AverageStartingSalary = 1200.0,
                            Credits = 130,
                            FacultyId = 1,
                            MinimumGrade = 75.0,
                            MinimumIELTS = 6.5,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 53
                        },
                        new
                        {
                            Id = 4,
                            AveragePrice = 16500.0,
                            AverageStartingSalary = 1000.0,
                            Credits = 128,
                            FacultyId = 2,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.5,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 13
                        },
                        new
                        {
                            Id = 5,
                            AveragePrice = 16500.0,
                            AverageStartingSalary = 1100.0,
                            Credits = 128,
                            FacultyId = 2,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.5,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 16
                        },
                        new
                        {
                            Id = 6,
                            AveragePrice = 16500.0,
                            AverageStartingSalary = 950.0,
                            Credits = 128,
                            FacultyId = 2,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.5,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 15
                        },
                        new
                        {
                            Id = 7,
                            AveragePrice = 16500.0,
                            AverageStartingSalary = 900.0,
                            Credits = 128,
                            FacultyId = 2,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.5,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 14
                        },
                        new
                        {
                            Id = 8,
                            AveragePrice = 18000.0,
                            AverageStartingSalary = 1300.0,
                            Credits = 140,
                            FacultyId = 3,
                            MinimumGrade = 75.0,
                            MinimumIELTS = 6.5,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 1
                        },
                        new
                        {
                            Id = 9,
                            AveragePrice = 18000.0,
                            AverageStartingSalary = 1350.0,
                            Credits = 140,
                            FacultyId = 3,
                            MinimumGrade = 75.0,
                            MinimumIELTS = 6.5,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 54
                        },
                        new
                        {
                            Id = 10,
                            AveragePrice = 18000.0,
                            AverageStartingSalary = 1250.0,
                            Credits = 140,
                            FacultyId = 3,
                            MinimumGrade = 75.0,
                            MinimumIELTS = 6.5,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 55
                        },
                        new
                        {
                            Id = 21,
                            AveragePrice = 17500.0,
                            AverageStartingSalary = 900.0,
                            Credits = 132,
                            FacultyId = 4,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.5,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 50
                        },
                        new
                        {
                            Id = 22,
                            AveragePrice = 17500.0,
                            AverageStartingSalary = 850.0,
                            Credits = 132,
                            FacultyId = 4,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.5,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 79
                        },
                        new
                        {
                            Id = 11,
                            AveragePrice = 19000.0,
                            AverageStartingSalary = 1200.0,
                            Credits = 140,
                            FacultyId = 5,
                            MinimumGrade = 75.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 2
                        },
                        new
                        {
                            Id = 12,
                            AveragePrice = 19000.0,
                            AverageStartingSalary = 1300.0,
                            Credits = 140,
                            FacultyId = 5,
                            MinimumGrade = 75.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 54
                        },
                        new
                        {
                            Id = 13,
                            AveragePrice = 19000.0,
                            AverageStartingSalary = 1250.0,
                            Credits = 140,
                            FacultyId = 5,
                            MinimumGrade = 75.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 1
                        },
                        new
                        {
                            Id = 14,
                            AveragePrice = 19000.0,
                            AverageStartingSalary = 1200.0,
                            Credits = 140,
                            FacultyId = 5,
                            MinimumGrade = 75.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 3
                        },
                        new
                        {
                            Id = 15,
                            AveragePrice = 19000.0,
                            AverageStartingSalary = 1150.0,
                            Credits = 140,
                            FacultyId = 5,
                            MinimumGrade = 75.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 4
                        },
                        new
                        {
                            Id = 16,
                            AveragePrice = 17000.0,
                            AverageStartingSalary = 900.0,
                            Credits = 130,
                            FacultyId = 6,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 13
                        },
                        new
                        {
                            Id = 17,
                            AveragePrice = 17000.0,
                            AverageStartingSalary = 950.0,
                            Credits = 130,
                            FacultyId = 6,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 16
                        },
                        new
                        {
                            Id = 18,
                            AveragePrice = 17000.0,
                            AverageStartingSalary = 850.0,
                            Credits = 130,
                            FacultyId = 6,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 14
                        },
                        new
                        {
                            Id = 19,
                            AveragePrice = 17000.0,
                            AverageStartingSalary = 900.0,
                            Credits = 130,
                            FacultyId = 6,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 55
                        },
                        new
                        {
                            Id = 20,
                            AveragePrice = 16500.0,
                            AverageStartingSalary = 800.0,
                            Credits = 132,
                            FacultyId = 7,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.5,
                            MinimumTOEFL = 79.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 77
                        },
                        new
                        {
                            Id = 23,
                            AveragePrice = 16500.0,
                            AverageStartingSalary = 1100.0,
                            Credits = 130,
                            FacultyId = 7,
                            MinimumGrade = 75.0,
                            MinimumIELTS = 6.5,
                            MinimumTOEFL = 79.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 53
                        },
                        new
                        {
                            Id = 24,
                            AveragePrice = 16500.0,
                            AverageStartingSalary = 950.0,
                            Credits = 130,
                            FacultyId = 8,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.5,
                            MinimumTOEFL = 79.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 13
                        },
                        new
                        {
                            Id = 25,
                            AveragePrice = 16500.0,
                            AverageStartingSalary = 1000.0,
                            Credits = 130,
                            FacultyId = 8,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.5,
                            MinimumTOEFL = 79.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 16
                        },
                        new
                        {
                            Id = 26,
                            AveragePrice = 16500.0,
                            AverageStartingSalary = 900.0,
                            Credits = 130,
                            FacultyId = 8,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.5,
                            MinimumTOEFL = 79.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 15
                        },
                        new
                        {
                            Id = 27,
                            AveragePrice = 15500.0,
                            AverageStartingSalary = 1100.0,
                            Credits = 135,
                            FacultyId = 9,
                            MinimumGrade = 75.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 54
                        },
                        new
                        {
                            Id = 28,
                            AveragePrice = 15500.0,
                            AverageStartingSalary = 1000.0,
                            Credits = 135,
                            FacultyId = 9,
                            MinimumGrade = 75.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 84
                        },
                        new
                        {
                            Id = 29,
                            AveragePrice = 15000.0,
                            AverageStartingSalary = 950.0,
                            Credits = 130,
                            FacultyId = 9,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 55
                        },
                        new
                        {
                            Id = 30,
                            AveragePrice = 12000.0,
                            AverageStartingSalary = 750.0,
                            Credits = 132,
                            FacultyId = 10,
                            MinimumGrade = 60.0,
                            MinimumIELTS = 5.5,
                            MinimumTOEFL = 75.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 15
                        },
                        new
                        {
                            Id = 31,
                            AveragePrice = 12000.0,
                            AverageStartingSalary = 750.0,
                            Credits = 132,
                            FacultyId = 10,
                            MinimumGrade = 60.0,
                            MinimumIELTS = 5.5,
                            MinimumTOEFL = 75.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 14
                        },
                        new
                        {
                            Id = 32,
                            AveragePrice = 12000.0,
                            AverageStartingSalary = 800.0,
                            Credits = 132,
                            FacultyId = 10,
                            MinimumGrade = 60.0,
                            MinimumIELTS = 5.5,
                            MinimumTOEFL = 75.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 13
                        },
                        new
                        {
                            Id = 33,
                            AveragePrice = 12000.0,
                            AverageStartingSalary = 800.0,
                            Credits = 132,
                            FacultyId = 10,
                            MinimumGrade = 60.0,
                            MinimumIELTS = 5.5,
                            MinimumTOEFL = 75.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 55
                        },
                        new
                        {
                            Id = 34,
                            AveragePrice = 12500.0,
                            AverageStartingSalary = 850.0,
                            Credits = 135,
                            FacultyId = 11,
                            MinimumGrade = 65.0,
                            MinimumIELTS = 5.5,
                            MinimumTOEFL = 75.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 55
                        },
                        new
                        {
                            Id = 35,
                            AveragePrice = 12000.0,
                            AverageStartingSalary = 700.0,
                            Credits = 132,
                            FacultyId = 20,
                            MinimumGrade = 60.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 78.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 17
                        },
                        new
                        {
                            Id = 36,
                            AveragePrice = 16000.0,
                            AverageStartingSalary = 1000.0,
                            Credits = 140,
                            FacultyId = 12,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 78.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 1
                        },
                        new
                        {
                            Id = 37,
                            AveragePrice = 15000.0,
                            AverageStartingSalary = 850.0,
                            Credits = 132,
                            FacultyId = 13,
                            MinimumGrade = 65.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 78.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 15
                        },
                        new
                        {
                            Id = 38,
                            AveragePrice = 14000.0,
                            AverageStartingSalary = 800.0,
                            Credits = 130,
                            FacultyId = 14,
                            MinimumGrade = 65.0,
                            MinimumIELTS = 5.5,
                            MinimumTOEFL = 75.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 15
                        },
                        new
                        {
                            Id = 39,
                            AveragePrice = 14000.0,
                            AverageStartingSalary = 750.0,
                            Credits = 130,
                            FacultyId = 15,
                            MinimumGrade = 65.0,
                            MinimumIELTS = 5.5,
                            MinimumTOEFL = 75.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 79
                        },
                        new
                        {
                            Id = 40,
                            AveragePrice = 14500.0,
                            AverageStartingSalary = 900.0,
                            Credits = 132,
                            FacultyId = 15,
                            MinimumGrade = 65.0,
                            MinimumIELTS = 5.5,
                            MinimumTOEFL = 75.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 55
                        },
                        new
                        {
                            Id = 41,
                            AveragePrice = 16000.0,
                            AverageStartingSalary = 1000.0,
                            Credits = 140,
                            FacultyId = 16,
                            MinimumGrade = 75.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 78.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 29
                        },
                        new
                        {
                            Id = 42,
                            AveragePrice = 18000.0,
                            AverageStartingSalary = 1200.0,
                            Credits = 140,
                            FacultyId = 17,
                            MinimumGrade = 75.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 82
                        },
                        new
                        {
                            Id = 43,
                            AveragePrice = 17000.0,
                            AverageStartingSalary = 1000.0,
                            Credits = 135,
                            FacultyId = 17,
                            MinimumGrade = 70.0,
                            MinimumIELTS = 6.0,
                            MinimumTOEFL = 80.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 83
                        },
                        new
                        {
                            Id = 44,
                            AveragePrice = 13000.0,
                            AverageStartingSalary = 850.0,
                            Credits = 130,
                            FacultyId = 18,
                            MinimumGrade = 65.0,
                            MinimumIELTS = 5.5,
                            MinimumTOEFL = 75.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 55
                        },
                        new
                        {
                            Id = 45,
                            AveragePrice = 13000.0,
                            AverageStartingSalary = 800.0,
                            Credits = 130,
                            FacultyId = 19,
                            MinimumGrade = 65.0,
                            MinimumIELTS = 5.5,
                            MinimumTOEFL = 75.0,
                            RequiresAptitudeTest = false,
                            StandardMajorId = 15
                        },
                        new
                        {
                            Id = 46,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 1200.0,
                            Credits = 144,
                            FacultyId = 21,
                            MinimumGrade = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 4
                        },
                        new
                        {
                            Id = 47,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 1200.0,
                            Credits = 144,
                            FacultyId = 21,
                            MinimumGrade = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 2
                        },
                        new
                        {
                            Id = 48,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 1300.0,
                            Credits = 144,
                            FacultyId = 21,
                            MinimumGrade = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 54
                        },
                        new
                        {
                            Id = 49,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 1250.0,
                            Credits = 144,
                            FacultyId = 21,
                            MinimumGrade = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 1
                        },
                        new
                        {
                            Id = 50,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 1200.0,
                            Credits = 144,
                            FacultyId = 21,
                            MinimumGrade = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 3
                        },
                        new
                        {
                            Id = 51,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 900.0,
                            Credits = 132,
                            FacultyId = 22,
                            MinimumGrade = 75.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 12
                        },
                        new
                        {
                            Id = 52,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 850.0,
                            Credits = 132,
                            FacultyId = 22,
                            MinimumGrade = 75.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 9
                        },
                        new
                        {
                            Id = 53,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 900.0,
                            Credits = 132,
                            FacultyId = 22,
                            MinimumGrade = 75.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 10
                        },
                        new
                        {
                            Id = 54,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 850.0,
                            Credits = 132,
                            FacultyId = 22,
                            MinimumGrade = 75.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 11
                        },
                        new
                        {
                            Id = 55,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 2000.0,
                            Credits = 220,
                            FacultyId = 23,
                            MinimumGrade = 90.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 5
                        },
                        new
                        {
                            Id = 56,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 1100.0,
                            Credits = 140,
                            FacultyId = 24,
                            MinimumGrade = 75.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 45
                        },
                        new
                        {
                            Id = 57,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 1000.0,
                            Credits = 135,
                            FacultyId = 24,
                            MinimumGrade = 75.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 46
                        },
                        new
                        {
                            Id = 58,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 1500.0,
                            Credits = 170,
                            FacultyId = 25,
                            MinimumGrade = 85.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 41
                        },
                        new
                        {
                            Id = 59,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 1800.0,
                            Credits = 180,
                            FacultyId = 26,
                            MinimumGrade = 85.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 37
                        },
                        new
                        {
                            Id = 60,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 1100.0,
                            Credits = 130,
                            FacultyId = 27,
                            MinimumGrade = 75.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 13
                        },
                        new
                        {
                            Id = 61,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 1200.0,
                            Credits = 130,
                            FacultyId = 27,
                            MinimumGrade = 75.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 16
                        },
                        new
                        {
                            Id = 62,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 1000.0,
                            Credits = 130,
                            FacultyId = 27,
                            MinimumGrade = 75.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 15
                        },
                        new
                        {
                            Id = 63,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 1000.0,
                            Credits = 130,
                            FacultyId = 27,
                            MinimumGrade = 75.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 14
                        },
                        new
                        {
                            Id = 64,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 1100.0,
                            Credits = 130,
                            FacultyId = 27,
                            MinimumGrade = 75.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 55
                        },
                        new
                        {
                            Id = 65,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 800.0,
                            Credits = 128,
                            FacultyId = 28,
                            MinimumGrade = 70.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 18
                        },
                        new
                        {
                            Id = 66,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 850.0,
                            Credits = 128,
                            FacultyId = 28,
                            MinimumGrade = 70.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 17
                        },
                        new
                        {
                            Id = 67,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 900.0,
                            Credits = 128,
                            FacultyId = 28,
                            MinimumGrade = 70.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 77
                        },
                        new
                        {
                            Id = 68,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 1200.0,
                            Credits = 138,
                            FacultyId = 29,
                            MinimumGrade = 80.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 29
                        },
                        new
                        {
                            Id = 69,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 900.0,
                            Credits = 132,
                            FacultyId = 30,
                            MinimumGrade = 70.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 21
                        },
                        new
                        {
                            Id = 70,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 950.0,
                            Credits = 132,
                            FacultyId = 30,
                            MinimumGrade = 70.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 66
                        },
                        new
                        {
                            Id = 71,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 850.0,
                            Credits = 132,
                            FacultyId = 31,
                            MinimumGrade = 70.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 25
                        },
                        new
                        {
                            Id = 72,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 800.0,
                            Credits = 132,
                            FacultyId = 31,
                            MinimumGrade = 70.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 26
                        },
                        new
                        {
                            Id = 73,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 800.0,
                            Credits = 132,
                            FacultyId = 31,
                            MinimumGrade = 70.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 27
                        },
                        new
                        {
                            Id = 74,
                            AveragePrice = 0.0,
                            AverageStartingSalary = 800.0,
                            Credits = 132,
                            FacultyId = 31,
                            MinimumGrade = 70.0,
                            RequiresAptitudeTest = true,
                            StandardMajorId = 28
                        });
                });

            modelBuilder.Entity("UniSelector.Models.StandardFaculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameArabic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StandardFaculties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameArabic = "كلية الهندسة",
                            NameEnglish = "College of Engineering"
                        },
                        new
                        {
                            Id = 2,
                            NameArabic = "كلية الطب",
                            NameEnglish = "College of Medicine"
                        },
                        new
                        {
                            Id = 3,
                            NameArabic = "كلية العلوم",
                            NameEnglish = "College of Science"
                        },
                        new
                        {
                            Id = 4,
                            NameArabic = "كلية إدارة الأعمال",
                            NameEnglish = "College of Business Administration"
                        },
                        new
                        {
                            Id = 5,
                            NameArabic = "كلية الآداب",
                            NameEnglish = "College of Arts"
                        },
                        new
                        {
                            Id = 6,
                            NameArabic = "كلية التربية",
                            NameEnglish = "College of Education"
                        },
                        new
                        {
                            Id = 7,
                            NameArabic = "كلية الشريعة والدراسات الإسلامية",
                            NameEnglish = "College of Sharia and Islamic Studies"
                        },
                        new
                        {
                            Id = 8,
                            NameArabic = "كلية الحقوق",
                            NameEnglish = "College of Law"
                        },
                        new
                        {
                            Id = 9,
                            NameArabic = "كلية العلوم الاجتماعية",
                            NameEnglish = "College of Social Sciences"
                        },
                        new
                        {
                            Id = 10,
                            NameArabic = "كلية طب الأسنان",
                            NameEnglish = "College of Dentistry"
                        },
                        new
                        {
                            Id = 11,
                            NameArabic = "كلية الصيدلة",
                            NameEnglish = "College of Pharmacy"
                        },
                        new
                        {
                            Id = 12,
                            NameArabic = "كلية العلوم الطبية المساعدة",
                            NameEnglish = "College of Allied Health Sciences"
                        },
                        new
                        {
                            Id = 13,
                            NameArabic = "كلية العمارة",
                            NameEnglish = "College of Architecture"
                        },
                        new
                        {
                            Id = 14,
                            NameArabic = "كلية علوم وهندسة الحاسوب",
                            NameEnglish = "College of Computing Sciences and Engineering"
                        },
                        new
                        {
                            Id = 15,
                            NameArabic = "كلية الصحة العامة",
                            NameEnglish = "College of Public Health"
                        },
                        new
                        {
                            Id = 16,
                            NameArabic = "كلية العلوم الحياتية",
                            NameEnglish = "College of Life Sciences"
                        },
                        new
                        {
                            Id = 17,
                            NameArabic = "كلية الدراسات العليا",
                            NameEnglish = "College of Graduate Studies"
                        },
                        new
                        {
                            Id = 18,
                            NameArabic = "كلية التمريض",
                            NameEnglish = "College of Nursing"
                        },
                        new
                        {
                            Id = 19,
                            NameArabic = "كلية الدراسات الإسلامية",
                            NameEnglish = "College of Islamic Studies"
                        },
                        new
                        {
                            Id = 20,
                            NameArabic = "كلية الفنون والإعلام",
                            NameEnglish = "College of Arts and Media"
                        });
                });

            modelBuilder.Entity("UniSelector.Models.StandardMajor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighSchoolPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameArabic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandardFacultyId")
                        .HasColumnType("int");

                    b.Property<int>("StudyDuration")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StandardFacultyId");

                    b.ToTable("StandardMajors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Focuses on electrical systems, power generation, and electronics",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الهندسة الكهربائية",
                            NameEnglish = "Electrical Engineering",
                            StandardFacultyId = 1,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 2,
                            Description = "Deals with design and construction of infrastructure",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الهندسة المدنية",
                            NameEnglish = "Civil Engineering",
                            StandardFacultyId = 1,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 3,
                            Description = "Studies mechanics, robotics, and thermal systems",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الهندسة الميكانيكية",
                            NameEnglish = "Mechanical Engineering",
                            StandardFacultyId = 1,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 4,
                            Description = "Focuses on chemical processes and materials",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الهندسة الكيميائية",
                            NameEnglish = "Chemical Engineering",
                            StandardFacultyId = 1,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 81,
                            Description = "Maritime engineering and naval architecture",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الهندسة البحرية",
                            NameEnglish = "Maritime Engineering",
                            StandardFacultyId = 1,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 82,
                            Description = "Aircraft engineering and maintenance",
                            HighSchoolPath = "Scientific",
                            NameArabic = "هندسة الطيران",
                            NameEnglish = "Aviation Engineering",
                            StandardFacultyId = 1,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 84,
                            Description = "Electronics and telecommunications systems",
                            HighSchoolPath = "Scientific",
                            NameArabic = "هندسة الإلكترونيات والاتصالات",
                            NameEnglish = "Electronics & Communications Engineering",
                            StandardFacultyId = 1,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "Complete medical education program",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الطب العام",
                            NameEnglish = "General Medicine",
                            StandardFacultyId = 2,
                            StudyDuration = 7
                        },
                        new
                        {
                            Id = 6,
                            Description = "Specializes in child healthcare",
                            HighSchoolPath = "Scientific",
                            NameArabic = "طب الأطفال",
                            NameEnglish = "Pediatrics",
                            StandardFacultyId = 2,
                            StudyDuration = 7
                        },
                        new
                        {
                            Id = 7,
                            Description = "Focus on surgical procedures and care",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الجراحة",
                            NameEnglish = "Surgery",
                            StandardFacultyId = 2,
                            StudyDuration = 7
                        },
                        new
                        {
                            Id = 8,
                            Description = "Emergency medical care and treatment",
                            HighSchoolPath = "Scientific",
                            NameArabic = "طب الطوارئ",
                            NameEnglish = "Emergency Medicine",
                            StandardFacultyId = 2,
                            StudyDuration = 7
                        },
                        new
                        {
                            Id = 9,
                            Description = "Study of matter and energy",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الفيزياء",
                            NameEnglish = "Physics",
                            StandardFacultyId = 3,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 10,
                            Description = "Study of chemical compounds and reactions",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الكيمياء",
                            NameEnglish = "Chemistry",
                            StandardFacultyId = 3,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 11,
                            Description = "Study of living organisms",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الأحياء",
                            NameEnglish = "Biology",
                            StandardFacultyId = 3,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 12,
                            Description = "Advanced mathematical studies",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الرياضيات",
                            NameEnglish = "Mathematics",
                            StandardFacultyId = 3,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 13,
                            Description = "Financial accounting and auditing",
                            HighSchoolPath = "Both",
                            NameArabic = "المحاسبة",
                            NameEnglish = "Accounting",
                            StandardFacultyId = 4,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 14,
                            Description = "Marketing strategies and consumer behavior",
                            HighSchoolPath = "Both",
                            NameArabic = "التسويق",
                            NameEnglish = "Marketing",
                            StandardFacultyId = 4,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 15,
                            Description = "Business operations and strategy",
                            HighSchoolPath = "Both",
                            NameArabic = "إدارة الأعمال",
                            NameEnglish = "Business Management",
                            StandardFacultyId = 4,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 16,
                            Description = "Financial management and investment",
                            HighSchoolPath = "Both",
                            NameArabic = "التمويل",
                            NameEnglish = "Finance",
                            StandardFacultyId = 4,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 83,
                            Description = "Aviation operations and management",
                            HighSchoolPath = "Both",
                            NameArabic = "إدارة الطيران",
                            NameEnglish = "Aviation Management",
                            StandardFacultyId = 4,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 85,
                            Description = "Human resource management and development",
                            HighSchoolPath = "Both",
                            NameArabic = "إدارة الموارد البشرية",
                            NameEnglish = "Human Resources Management",
                            StandardFacultyId = 4,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 17,
                            Description = "English linguistics and literature",
                            HighSchoolPath = "Both",
                            NameArabic = "اللغة الإنجليزية",
                            NameEnglish = "English Language",
                            StandardFacultyId = 5,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 18,
                            Description = "Arabic linguistics and literature",
                            HighSchoolPath = "Both",
                            NameArabic = "اللغة العربية",
                            NameEnglish = "Arabic Language",
                            StandardFacultyId = 5,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 19,
                            Description = "Historical studies and research",
                            HighSchoolPath = "Literary",
                            NameArabic = "التاريخ",
                            NameEnglish = "History",
                            StandardFacultyId = 5,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 20,
                            Description = "Philosophical studies and ethics",
                            HighSchoolPath = "Literary",
                            NameArabic = "الفلسفة",
                            NameEnglish = "Philosophy",
                            StandardFacultyId = 5,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 21,
                            Description = "Primary school teaching",
                            HighSchoolPath = "Both",
                            NameArabic = "التربية الابتدائية",
                            NameEnglish = "Elementary Education",
                            StandardFacultyId = 6,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 22,
                            Description = "Special needs education",
                            HighSchoolPath = "Both",
                            NameArabic = "التربية الخاصة",
                            NameEnglish = "Special Education",
                            StandardFacultyId = 6,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 23,
                            Description = "English language teaching",
                            HighSchoolPath = "Both",
                            NameArabic = "تعليم اللغة الإنجليزية",
                            NameEnglish = "English Education",
                            StandardFacultyId = 6,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 24,
                            Description = "Mathematics teaching",
                            HighSchoolPath = "Scientific",
                            NameArabic = "تعليم الرياضيات",
                            NameEnglish = "Mathematics Education",
                            StandardFacultyId = 6,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 25,
                            Description = "Islamic law and jurisprudence",
                            HighSchoolPath = "Both",
                            NameArabic = "الفقه الإسلامي",
                            NameEnglish = "Islamic Jurisprudence",
                            StandardFacultyId = 7,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 26,
                            Description = "Islamic theology and doctrine",
                            HighSchoolPath = "Both",
                            NameArabic = "أصول الدين",
                            NameEnglish = "Islamic Theology",
                            StandardFacultyId = 7,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 27,
                            Description = "Quran interpretation and sciences",
                            HighSchoolPath = "Both",
                            NameArabic = "الدراسات القرآنية",
                            NameEnglish = "Quranic Studies",
                            StandardFacultyId = 7,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 28,
                            Description = "Study of prophetic traditions",
                            HighSchoolPath = "Both",
                            NameArabic = "الحديث وعلومه",
                            NameEnglish = "Hadith Studies",
                            StandardFacultyId = 7,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 29,
                            Description = "Constitutional and administrative law",
                            HighSchoolPath = "Both",
                            NameArabic = "القانون العام",
                            NameEnglish = "Public Law",
                            StandardFacultyId = 8,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 30,
                            Description = "Civil and commercial law",
                            HighSchoolPath = "Both",
                            NameArabic = "القانون الخاص",
                            NameEnglish = "Private Law",
                            StandardFacultyId = 8,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 31,
                            Description = "Criminal law and procedure",
                            HighSchoolPath = "Both",
                            NameArabic = "القانون الجنائي",
                            NameEnglish = "Criminal Law",
                            StandardFacultyId = 8,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 32,
                            Description = "International legal systems",
                            HighSchoolPath = "Both",
                            NameArabic = "القانون الدولي",
                            NameEnglish = "International Law",
                            StandardFacultyId = 8,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 33,
                            Description = "Human behavior and mental processes",
                            HighSchoolPath = "Both",
                            NameArabic = "علم النفس",
                            NameEnglish = "Psychology",
                            StandardFacultyId = 9,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 34,
                            Description = "Study of human society",
                            HighSchoolPath = "Both",
                            NameArabic = "علم الاجتماع",
                            NameEnglish = "Sociology",
                            StandardFacultyId = 9,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 35,
                            Description = "Community service and welfare",
                            HighSchoolPath = "Both",
                            NameArabic = "الخدمة الاجتماعية",
                            NameEnglish = "Social Work",
                            StandardFacultyId = 9,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 36,
                            Description = "Political systems and relations",
                            HighSchoolPath = "Both",
                            NameArabic = "العلوم السياسية",
                            NameEnglish = "Political Science",
                            StandardFacultyId = 9,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 37,
                            Description = "Comprehensive dental care",
                            HighSchoolPath = "Scientific",
                            NameArabic = "طب الأسنان العام",
                            NameEnglish = "General Dentistry",
                            StandardFacultyId = 10,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 38,
                            Description = "Dental surgical procedures",
                            HighSchoolPath = "Scientific",
                            NameArabic = "جراحة الفم والأسنان",
                            NameEnglish = "Oral Surgery",
                            StandardFacultyId = 10,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 39,
                            Description = "Dental alignment and correction",
                            HighSchoolPath = "Scientific",
                            NameArabic = "تقويم الأسنان",
                            NameEnglish = "Orthodontics",
                            StandardFacultyId = 10,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 40,
                            Description = "Children's dental care",
                            HighSchoolPath = "Scientific",
                            NameArabic = "طب أسنان الأطفال",
                            NameEnglish = "Pediatric Dentistry",
                            StandardFacultyId = 10,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 41,
                            Description = "Pharmaceutical sciences",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الصيدلة العامة",
                            NameEnglish = "General Pharmacy",
                            StandardFacultyId = 11,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 42,
                            Description = "Clinical pharmaceutical care",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الصيدلة السريرية",
                            NameEnglish = "Clinical Pharmacy",
                            StandardFacultyId = 11,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 43,
                            Description = "Pharmaceutical manufacturing",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الصيدلة الصناعية",
                            NameEnglish = "Industrial Pharmacy",
                            StandardFacultyId = 11,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 44,
                            Description = "Biological pharmaceutical studies",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الصيدلة الحيوية",
                            NameEnglish = "Biopharmacy",
                            StandardFacultyId = 11,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 45,
                            Description = "Physical rehabilitation",
                            HighSchoolPath = "Scientific",
                            NameArabic = "العلاج الطبيعي",
                            NameEnglish = "Physical Therapy",
                            StandardFacultyId = 12,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 46,
                            Description = "Medical testing and analysis",
                            HighSchoolPath = "Scientific",
                            NameArabic = "المختبرات الطبية",
                            NameEnglish = "Medical Laboratory",
                            StandardFacultyId = 12,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 47,
                            Description = "Medical imaging",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الأشعة التشخيصية",
                            NameEnglish = "Diagnostic Radiology",
                            StandardFacultyId = 12,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 48,
                            Description = "Nutritional therapy",
                            HighSchoolPath = "Scientific",
                            NameArabic = "التغذية العلاجية",
                            NameEnglish = "Clinical Nutrition",
                            StandardFacultyId = 12,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 49,
                            Description = "Building design and planning",
                            HighSchoolPath = "Scientific",
                            NameArabic = "العمارة",
                            NameEnglish = "Architecture",
                            StandardFacultyId = 13,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 50,
                            Description = "Interior space design",
                            HighSchoolPath = "Scientific",
                            NameArabic = "التصميم الداخلي",
                            NameEnglish = "Interior Design",
                            StandardFacultyId = 13,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 51,
                            Description = "City planning and development",
                            HighSchoolPath = "Scientific",
                            NameArabic = "تخطيط المدن",
                            NameEnglish = "Urban Planning",
                            StandardFacultyId = 13,
                            StudyDuration = 5
                        },
                        new
                        {
                            Id = 52,
                            Description = "Environmental design",
                            HighSchoolPath = "Scientific",
                            NameArabic = "تصميم المناظر الطبيعية",
                            NameEnglish = "Landscape Architecture",
                            StandardFacultyId = 13,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 53,
                            Description = "Programming and computer theory",
                            HighSchoolPath = "Scientific",
                            NameArabic = "علوم الحاسوب",
                            NameEnglish = "Computer Science",
                            StandardFacultyId = 14,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 54,
                            Description = "Software development and systems",
                            HighSchoolPath = "Scientific",
                            NameArabic = "هندسة الحاسوب",
                            NameEnglish = "Computer Engineering",
                            StandardFacultyId = 14,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 55,
                            Description = "Business information technology",
                            HighSchoolPath = "Scientific",
                            NameArabic = "نظم المعلومات",
                            NameEnglish = "Information Systems",
                            StandardFacultyId = 14,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 56,
                            Description = "Cybersecurity and data protection",
                            HighSchoolPath = "Scientific",
                            NameArabic = "أمن المعلومات",
                            NameEnglish = "Information Security",
                            StandardFacultyId = 14,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 57,
                            Description = "Community health programs",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الصحة العامة",
                            NameEnglish = "Public Health",
                            StandardFacultyId = 15,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 58,
                            Description = "Environmental health factors",
                            HighSchoolPath = "Scientific",
                            NameArabic = "صحة البيئة",
                            NameEnglish = "Environmental Health",
                            StandardFacultyId = 15,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 59,
                            Description = "Disease patterns and control",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الوبائيات",
                            NameEnglish = "Epidemiology",
                            StandardFacultyId = 15,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 60,
                            Description = "Health education and awareness",
                            HighSchoolPath = "Scientific",
                            NameArabic = "تعزيز الصحة",
                            NameEnglish = "Health Promotion",
                            StandardFacultyId = 15,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 61,
                            Description = "Biological technology applications",
                            HighSchoolPath = "Scientific",
                            NameArabic = "التقنية الحيوية",
                            NameEnglish = "Biotechnology",
                            StandardFacultyId = 16,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 62,
                            Description = "Study of microorganisms",
                            HighSchoolPath = "Scientific",
                            NameArabic = "علم الأحياء الدقيقة",
                            NameEnglish = "Microbiology",
                            StandardFacultyId = 16,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 63,
                            Description = "Genetic studies and research",
                            HighSchoolPath = "Scientific",
                            NameArabic = "علم الوراثة",
                            NameEnglish = "Genetics",
                            StandardFacultyId = 16,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 64,
                            Description = "Environmental studies",
                            HighSchoolPath = "Scientific",
                            NameArabic = "العلوم البيئية",
                            NameEnglish = "Environmental Science",
                            StandardFacultyId = 16,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 65,
                            Description = "Advanced business administration",
                            HighSchoolPath = "Both",
                            NameArabic = "إدارة الأعمال التنفيذية",
                            NameEnglish = "Executive MBA",
                            StandardFacultyId = 17,
                            StudyDuration = 2
                        },
                        new
                        {
                            Id = 66,
                            Description = "Educational management",
                            HighSchoolPath = "Both",
                            NameArabic = "القيادة التربوية",
                            NameEnglish = "Educational Leadership",
                            StandardFacultyId = 17,
                            StudyDuration = 2
                        },
                        new
                        {
                            Id = 67,
                            Description = "Advanced engineering studies",
                            HighSchoolPath = "Scientific",
                            NameArabic = "الهندسة المتقدمة",
                            NameEnglish = "Advanced Engineering",
                            StandardFacultyId = 17,
                            StudyDuration = 2
                        },
                        new
                        {
                            Id = 68,
                            Description = "Advanced scientific research",
                            HighSchoolPath = "Scientific",
                            NameArabic = "العلوم التطبيقية",
                            NameEnglish = "Applied Sciences",
                            StandardFacultyId = 17,
                            StudyDuration = 2
                        },
                        new
                        {
                            Id = 69,
                            Description = "General nursing care",
                            HighSchoolPath = "Scientific",
                            NameArabic = "التمريض العام",
                            NameEnglish = "General Nursing",
                            StandardFacultyId = 18,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 70,
                            Description = "Emergency care nursing",
                            HighSchoolPath = "Scientific",
                            NameArabic = "تمريض الطوارئ",
                            NameEnglish = "Emergency Nursing",
                            StandardFacultyId = 18,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 71,
                            Description = "Children's healthcare",
                            HighSchoolPath = "Scientific",
                            NameArabic = "تمريض الأطفال",
                            NameEnglish = "Pediatric Nursing",
                            StandardFacultyId = 18,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 72,
                            Description = "Surgical care nursing",
                            HighSchoolPath = "Scientific",
                            NameArabic = "تمريض الباطني والجراحة",
                            NameEnglish = "Medical-Surgical Nursing",
                            StandardFacultyId = 18,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 73,
                            Description = "Comprehensive Islamic studies",
                            HighSchoolPath = "Both",
                            NameArabic = "الدراسات الإسلامية",
                            NameEnglish = "Islamic Studies",
                            StandardFacultyId = 19,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 74,
                            Description = "Islamic economic principles",
                            HighSchoolPath = "Both",
                            NameArabic = "الاقتصاد الإسلامي",
                            NameEnglish = "Islamic Economics",
                            StandardFacultyId = 19,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 75,
                            Description = "Islamic cultural studies",
                            HighSchoolPath = "Both",
                            NameArabic = "الدعوة والثقافة الإسلامية",
                            NameEnglish = "Islamic Culture",
                            StandardFacultyId = 19,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 76,
                            Description = "History of Islam",
                            HighSchoolPath = "Both",
                            NameArabic = "التاريخ الإسلامي",
                            NameEnglish = "Islamic History",
                            StandardFacultyId = 19,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 77,
                            Description = "Mass communication",
                            HighSchoolPath = "Both",
                            NameArabic = "الإعلام",
                            NameEnglish = "Media Studies",
                            StandardFacultyId = 20,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 78,
                            Description = "Visual artistic expression",
                            HighSchoolPath = "Both",
                            NameArabic = "الفنون البصرية",
                            NameEnglish = "Visual Arts",
                            StandardFacultyId = 20,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 79,
                            Description = "Visual communication design",
                            HighSchoolPath = "Both",
                            NameArabic = "التصميم الجرافيكي",
                            NameEnglish = "Graphic Design",
                            StandardFacultyId = 20,
                            StudyDuration = 4
                        },
                        new
                        {
                            Id = 80,
                            Description = "Media content creation",
                            HighSchoolPath = "Both",
                            NameArabic = "الإنتاج الإعلامي",
                            NameEnglish = "Media Production",
                            StandardFacultyId = 20,
                            StudyDuration = 4
                        });
                });

            modelBuilder.Entity("UniSelector.Models.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KuwaitRank")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmallDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Universities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullDescription = "Accredited liberal arts institution offering American-style education since 2004. Located in Salmiya, Kuwait's premier university district.",
                            ImageUrl = "/images/University/AUK.png",
                            KuwaitRank = 1,
                            Name = "American University of Kuwait (AUK)",
                            PhoneNumber = "1802040",
                            SmallDescription = "Kuwait's leading American-style liberal arts university",
                            location = "Salmiya, Block 13, Salem Al Mubarak Street",
                            type = "Private"
                        },
                        new
                        {
                            Id = 2,
                            FullDescription = "Leading engineering and business focused university established in 2008. Known for strong industry partnerships and state-of-the-art facilities.",
                            ImageUrl = "/images/University/AUM.png",
                            KuwaitRank = 2,
                            Name = "American University of Middle East (AUM)",
                            PhoneNumber = "+965 22251400",
                            SmallDescription = "Premier engineering and business education in Kuwait",
                            location = "Egaila, Block 6, Salem Sabah Al-Salem Area",
                            type = "Private"
                        },
                        new
                        {
                            Id = 3,
                            FullDescription = "First private university in Kuwait, established in 2002. Offers American-style education with focus on business and technology.",
                            ImageUrl = "/images/University/GUST.png",
                            KuwaitRank = 3,
                            Name = "Gulf University for Science and Technology (GUST)",
                            PhoneNumber = "25307000",
                            SmallDescription = "Kuwait's first private university for business and technology",
                            location = "Mubarak Al-Abdullah Area, West Mishref",
                            type = "Private"
                        },
                        new
                        {
                            Id = 4,
                            FullDescription = "Regional university focused on accessible education since 2002. Partners with UK Open University for international accreditation.",
                            ImageUrl = "/images/University/AOU.png",
                            KuwaitRank = 4,
                            Name = "Arab Open University (AOU)",
                            PhoneNumber = "24394400",
                            SmallDescription = "Accessible quality education across Kuwait",
                            location = "Al-Ardiya, Block 3, Street 37",
                            type = "Private"
                        },
                        new
                        {
                            Id = 5,
                            FullDescription = "Specialized institution focusing on engineering and technology education. Strong emphasis on practical skills and industry readiness.",
                            ImageUrl = "/images/University/KCST.png",
                            KuwaitRank = 5,
                            Name = "Kuwait College of Science and Technology (KCST)",
                            PhoneNumber = "24980450",
                            SmallDescription = "Advanced technical education in Kuwait",
                            location = "Doha District, Block 4",
                            type = "Private"
                        },
                        new
                        {
                            Id = 6,
                            FullDescription = "Australian-standard technical and vocational education. Strong focus on engineering and maritime studies.",
                            ImageUrl = "/images/University/AU.png",
                            KuwaitRank = 6,
                            Name = "Australian University (AU)",
                            PhoneNumber = "1828225",
                            SmallDescription = "Australian-standard technical education",
                            location = "Mishref, Block 5",
                            type = "Private"
                        },
                        new
                        {
                            Id = 7,
                            FullDescription = "Women's college offering Australian-standard education in business, design and technology.",
                            ImageUrl = "/images/University/BHCK.png",
                            KuwaitRank = 7,
                            Name = "Box Hill College Kuwait",
                            PhoneNumber = "23962000",
                            SmallDescription = "Quality education for women in Kuwait",
                            location = "Abu Halifa, Block 1",
                            type = "Private"
                        },
                        new
                        {
                            Id = 8,
                            FullDescription = "Specialized institution focused on legal education and jurisprudence studies.",
                            ImageUrl = "/images/University/KILAW.png",
                            KuwaitRank = 8,
                            Name = "Kuwait International Law School",
                            PhoneNumber = "22280111",
                            SmallDescription = "Premier legal education in Kuwait",
                            location = "Doha, Block 2",
                            type = "Private"
                        },
                        new
                        {
                            Id = 9,
                            FullDescription = "Specialized college offering aviation engineering and management programs.",
                            ImageUrl = "/images/University/CAT.png",
                            KuwaitRank = 9,
                            Name = "College of Aviation Technology",
                            PhoneNumber = "24315555",
                            SmallDescription = "Kuwait's aviation education hub",
                            location = "Kuwait International Airport Area",
                            type = "Private"
                        },
                        new
                        {
                            Id = 10,
                            FullDescription = "Modern technical college focusing on IT, business and telecommunications.",
                            ImageUrl = "/images/University/KTECH.png",
                            KuwaitRank = 10,
                            Name = "Kuwait Technical College",
                            PhoneNumber = "22280222",
                            SmallDescription = "Advanced technical education",
                            location = "Shuwaikh Educational Area",
                            type = "Private"
                        },
                        new
                        {
                            Id = 11,
                            FullDescription = "Established in 1966, Kuwait's first public university offering comprehensive education across multiple campuses",
                            ImageUrl = "/images/University/KU.png",
                            KuwaitRank = 11,
                            Name = "Kuwait University",
                            PhoneNumber = "24987000",
                            SmallDescription = "Kuwait's premier public higher education institution",
                            location = "Multiple campuses - Main in Khaldiya",
                            type = "Public"
                        });
                });

            modelBuilder.Entity("Application", b =>
                {
                    b.HasOne("UniSelector.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniSelector.Models.Major", "Major")
                        .WithMany()
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UniSelector.Models.University", "University")
                        .WithMany()
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UniSelector.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");

                    b.Navigation("Major");

                    b.Navigation("University");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("UniSelector.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("UniSelector.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniSelector.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("UniSelector.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniSelector.Models.Faculty", b =>
                {
                    b.HasOne("UniSelector.Models.StandardFaculty", "StandardFaculty")
                        .WithMany()
                        .HasForeignKey("StandardFacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniSelector.Models.University", "University")
                        .WithMany("Faculties")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StandardFaculty");

                    b.Navigation("University");
                });

            modelBuilder.Entity("UniSelector.Models.Major", b =>
                {
                    b.HasOne("UniSelector.Models.Faculty", "Faculty")
                        .WithMany("Majors")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniSelector.Models.StandardMajor", "StandardMajor")
                        .WithMany()
                        .HasForeignKey("StandardMajorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Faculty");

                    b.Navigation("StandardMajor");
                });

            modelBuilder.Entity("UniSelector.Models.StandardMajor", b =>
                {
                    b.HasOne("UniSelector.Models.StandardFaculty", "StandardFaculty")
                        .WithMany("StandardMajors")
                        .HasForeignKey("StandardFacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StandardFaculty");
                });

            modelBuilder.Entity("UniSelector.Models.Faculty", b =>
                {
                    b.Navigation("Majors");
                });

            modelBuilder.Entity("UniSelector.Models.StandardFaculty", b =>
                {
                    b.Navigation("StandardMajors");
                });

            modelBuilder.Entity("UniSelector.Models.University", b =>
                {
                    b.Navigation("Faculties");
                });
#pragma warning restore 612, 618
        }
    }
}
