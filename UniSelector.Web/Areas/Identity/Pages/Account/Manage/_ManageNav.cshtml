@using UniSelector.Web.Areas.Identity.Pages.Account.Manage
@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<div class="list-group">
    <a class="list-group-item list-group-item-action @ManageNavPages.IndexNavClass(ViewContext)"
       id="profile" asp-page="./Index">Profile</a>

    @if (!User.IsInRole("Institution"))
    {
        <a class="list-group-item list-group-item-action @ManageNavPages.EmailNavClass(ViewContext)"
           id="email" asp-page="./Email">Email</a>
    }
    <a class="list-group-item list-group-item-action @ManageNavPages.ChangePasswordNavClass(ViewContext)"
       id="change-password" asp-page="./ChangePassword">Password</a>

    <a class="nav-link "></a>

    <a class="list-group-item list-group-item-action @ManageNavPages.ProfileNavClass(ViewContext)"
       id="user-profile" asp-page="./Profile">Additional Profile Info</a>

    @if (hasExternalLogins)
    {
        <a class="list-group-item list-group-item-action @ManageNavPages.ExternalLoginsNavClass(ViewContext)"
           id="external-login" asp-page="./ExternalLogins">External logins</a>
    }

    @* <a class="list-group-item list-group-item-action @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"
       id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a> *@

    <a class="list-group-item list-group-item-action @ManageNavPages.PersonalDataNavClass(ViewContext)"
       id="personal-data" asp-page="./PersonalData">Personal data</a>
</div>